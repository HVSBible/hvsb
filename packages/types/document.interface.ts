import type { IMediaMetaData } from '.';
import type { TranslationFields } from './media-metadata.interface';

export interface IDocument extends IMediaMetaData {
  author?: string;
  secondAuthor?: string; // going to remove in favor of array for 'author' field
  authors?: string[]; // refactoring to be just array of strings (currently breaks Admin document search which is going away)
  yearWritten?: number;
  keywords?: string[];
  description?: string; // short description to show in list which could be written in by hand or auto-generated by cloud-function from beginning of document content body
  description_translations?: TranslationFields;
  location?: string;
  topic?: string;
  genre: DocumentGenre;
  verse?: number; // used by notesService to extract current verse from appropriate verseId array item
  type: 'document';
  sections: IDocumentSection[];

  stringifiedSections?: string; // for Algolia indexed documents
}

export interface IDocumentSection {
  contentType: 'text' | 'image';
  text?: string;
  text_translations?: TranslationFields;
  imageId?: string;
}

export enum DocumentGenres {
  note = 'Note',
  topical = 'Topical Study',
  word = 'Word Study',
  passage = 'Passage Study',
  artifact = 'Artifact',
  site = 'Site Study',
  biography = 'Biography',
  textual = 'Textual Study',
  ancient_literature = 'Parallels in Ancient Literature',
  chart = 'Chart',
  timeline = 'Timeline',
  apologetics = 'Apologetics',
  culture = 'Customs & Culture',
  application = 'Application & Worship',
  exegetical = 'Exegetical Insight',
  doctrine = 'Bible Doctrine', // shortened from "Guide to Bible Doctrine"
  reflection = 'Reflection', // shortened from "Reflection on God's Truth"
  fathers = 'Church Fathers', // shortened from "Teaching of Church Fathers"
  wisdom = 'Words of Wisdom',
}

export type DocumentGenre = keyof typeof DocumentGenres;
